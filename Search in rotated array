
int pivotf(vector<int>& arr,int size){
int s=0;
int e=size-1;
int  mid=(e+s)/2;
while(s<e){
    if (arr[mid]>=arr[0]){
        s=mid+1;


    }
    else{
        e=mid;
    }
    mid=(s+e)/2;
    
}
return s;

}
int binarysearch(vector<int>& arr,int s,int e,int key){
int start=s;
int end=e-1; 
int mid=(start+end)/2;
while(s<=e){
    if(arr[mid]==key){
        return mid;
    }
    else if(arr[mid]>key){
            e=mid-1;


    }
    else{
        s=mid+1;
    }
    mid=(s+e)/2;
}
return -1;

}
int search(vector<int>& arr, int n, int k)
{
    int pivot=pivotf( arr,  n);
    if(k>=arr[pivot]&& k<=arr[n-1]){
        
return binarysearch(arr,pivot,n,k);
        
    }
    else{
        return binarysearch(arr,0,pivot-1,k);
    }

}
